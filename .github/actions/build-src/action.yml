
name: 'Build src'
description: 'Build src!'
inputs:
  refresh:
    description: 'Should the R/stanmodels.R file be refreshed'
    default: true
runs:
  using: "composite"
  steps:
    
    - name: Determine system/package state
      run: |
        sink(".github/meta.txt")
            list(
                version = version,
                pkgs = installed.packages()[c("Rcpp", "rstan", "rstantools"), c("Version", "Package")]
            )
        sink()
      shell: Rscript {0}
    
    # The default R/stanmodels.R was updated in v2.2.0 (11Apr2022)
    # Normally for older versions it would change itself on the fly
    # when it compiles the stan model
    # but as we are using cached models we are preventing compilation
    # and thus need to manually refresh the file
    - name: Refresh rstantools config files
      shell: bash
      run: |
        echo "inputs.refresh = ${{ inputs.refresh }}"
        if ${{ inputs.refresh }} ; then
          Rscript -e "rstantools::rstan_config()"
        fi
    
    - name: Cache Compiled Stan Code
      id: cache-pkgs
      uses: actions/cache@v3
      with:
        path: src/*
        key: ${{ hashFiles('.github/meta.txt') }}-${{ hashFiles('inst/stan/MMRM.stan') }}
    
    
    # pkgbuild compares time stamps of *.so object to all header files including
    # inst/include/stan_meta_header.hpp  so we touch the .so object to push its time
    # stamp beyond that of the .hpp file
    - name: Build if needed
      shell: bash
      run: |
        if [[ ${{ steps.cache-pkgs.outputs.cache-hit == 'true' }} && "${{ runner.os }}" !=  "Windows" ]] ; then
            echo "No compilation needed!"
            touch src/*.so
        else
            echo "Compilation needed!"
            Rscript -e "pkgbuild::compile_dll()"
        fi
